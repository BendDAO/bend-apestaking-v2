[
  {
    "inputs": [
      {
        "internalType": "contract IApeCoinStaking",
        "name": "apeCoinStaking_",
        "type": "address"
      },
      {
        "internalType": "contract ICoinPool",
        "name": "coinPool_",
        "type": "address"
      },
      {
        "internalType": "contract IStakeManager",
        "name": "staker_",
        "type": "address"
      },
      {
        "internalType": "contract IBNFTRegistry",
        "name": "bnftRegistry_",
        "type": "address"
      },
      {
        "internalType": "contract IAddressProviderV2",
        "name": "v2AddressProvider_",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "MODULEID__POOL_LENS",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "PERCENTAGE_FACTOR",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "apeCoinStaking",
    "outputs": [
      {
        "internalType": "contract IApeCoinStaking",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bakc",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bayc",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "bnftRegistry",
    "outputs": [
      {
        "internalType": "contract IBNFTRegistry",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "coinPool",
    "outputs": [
      {
        "internalType": "contract ICoinPool",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "userAddr_",
        "type": "address"
      },
      {
        "internalType": "uint32[]",
        "name": "v2PoolIds_",
        "type": "uint32[]"
      }
    ],
    "name": "getAllStakedNftCountForBendV2",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "baycNum",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "maycNum",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "bakcNum",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IStakedNft",
        "name": "nft_",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "userAddr_",
        "type": "address"
      }
    ],
    "name": "getStakedNftCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "count",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract IStakedNft",
        "name": "nft_",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "userAddr_",
        "type": "address"
      },
      {
        "internalType": "uint32[]",
        "name": "v2PoolIds_",
        "type": "uint32[]"
      }
    ],
    "name": "getStakedNftCountForBendV2",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "count",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "mayc",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "staker",
    "outputs": [
      {
        "internalType": "contract IStakeManager",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "v2AddressProvider",
    "outputs": [
      {
        "internalType": "contract IAddressProviderV2",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "v2PoolLens",
    "outputs": [
      {
        "internalType": "contract IPoolLensV2",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "v2PoolManager",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "baycTokenIds_",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "maycTokenIds_",
        "type": "uint256[]"
      }
    ],
    "name": "viewBakcPairingStatus",
    "outputs": [
      {
        "internalType": "bool[]",
        "name": "baycPairs",
        "type": "bool[]"
      },
      {
        "internalType": "bool[]",
        "name": "maycPairs",
        "type": "bool[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nft_",
        "type": "address"
      },
      {
        "internalType": "uint256[]",
        "name": "tokenIds_",
        "type": "uint256[]"
      }
    ],
    "name": "viewNftPoolPendingRewards",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "rewards",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "viewPool",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "coinPoolPendingApeCoin",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "coinPoolPendingRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "coinPoolStakedAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "baycPoolMaxCap",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maycPoolMaxCap",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bakcPoolMaxCap",
            "type": "uint256"
          }
        ],
        "internalType": "struct PoolViewer.PoolState",
        "name": "poolState",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "viewPoolPendingRewards",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "coinPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "baycPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maycPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bakcPoolRewards",
            "type": "uint256"
          }
        ],
        "internalType": "struct PoolViewer.PendingRewards",
        "name": "rewards",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "userAddr_",
        "type": "address"
      }
    ],
    "name": "viewUserPendingRewards",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "coinPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "baycPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maycPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bakcPoolRewards",
            "type": "uint256"
          }
        ],
        "internalType": "struct PoolViewer.PendingRewards",
        "name": "rewards",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "userAddr_",
        "type": "address"
      },
      {
        "internalType": "uint32[]",
        "name": "v2PoolIds_",
        "type": "uint32[]"
      }
    ],
    "name": "viewUserPendingRewardsForBendV2",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "coinPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "baycPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maycPoolRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "bakcPoolRewards",
            "type": "uint256"
          }
        ],
        "internalType": "struct PoolViewer.PendingRewards",
        "name": "rewards",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
