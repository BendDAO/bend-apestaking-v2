{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x417fAb9416910F1Df4B8a6B968C345b7d35DDb02",
    "txHash": "0x169c93d59ad85c16a8b261dff8ae83312dcae19cdcf500c9d426fcb97025767c"
  },
  "proxies": [
    {
      "address": "0x102A6352D90a1348184298f0184881D9e21F5C8c",
      "txHash": "0xf2d794979e35f0ab6ab5b99e9acbdc815145abcef59331f1f41eb4a39fbcecb6",
      "kind": "transparent"
    },
    {
      "address": "0x0d42Ec76548F573f78880dFAc1E9A8f4a904D868",
      "txHash": "0xc86e934a03942e89a9378cb8de88ad1a37ff4cf3da1399011bb5c49470239c26",
      "kind": "transparent"
    },
    {
      "address": "0xfb4F26cAa06f17324C89Ec1bF6a83a8Cb848B009",
      "txHash": "0x88ee987a8b0d7dd040ce04e41e705a9a58b7675c0602566bc2159a6d1434cf65",
      "kind": "transparent"
    },
    {
      "address": "0xD26AB813453DAf2cCaA07e119BBd6FD93F6ADca0",
      "txHash": "0x7481c474c7a4c716695aba92a53395c5e832bcaf5f0baa03b257ad408f29a64e",
      "kind": "transparent"
    },
    {
      "address": "0x0e5b15F7d1Ca881406f108b56540BB254EF4f258",
      "txHash": "0x1d29034b1767fdcc2c79e7a03d235844ee8050d0c699d6b51da6bfaf8dc1bb99",
      "kind": "transparent"
    },
    {
      "address": "0x9A285f6c99936253575fC0BdEc0266faF3793afF",
      "txHash": "0x33809965c91554e6a471dc54c3bfe3f952dcb61eead81a629a62542552a75e24",
      "kind": "transparent"
    },
    {
      "address": "0x0aaC3738020F8e8394Ebc4bc39E887FDdE996914",
      "txHash": "0x5cf7eab6117958f3df96acef424b11ab165f075ed70cae9a6ba3b531a587a786",
      "kind": "transparent"
    },
    {
      "address": "0x650ceb8ad5C3B06252c30aB9CF2f3deD521DDF3d",
      "txHash": "0x85804ebae9a44b791dae6dbc2b1f2493d128a4c5d121dd9dc632997beff51c81",
      "kind": "transparent"
    },
    {
      "address": "0x28E45a238f3e30432411bcA36233dD22Bc2F8681",
      "txHash": "0x7408aaf7846a18ed2e239c9836204d7bf027d24aedc3c66499465433ef9a78c2",
      "kind": "transparent"
    },
    {
      "address": "0xd1837d629d7A75a5ab8dfE061379e43c978d1Ad4",
      "txHash": "0x431724bfce71b0c246a347772c58fd95fc08a2bd5f5253a7f02085b8a2fca408",
      "kind": "transparent"
    },
    {
      "address": "0x25876363DECB4De618676bd2d602948C9f33907C",
      "txHash": "0xb2e1cf2cc5b9f65f69b73eb95471dbfd3a5f3d03918130b9b869353849b738b7",
      "kind": "transparent"
    },
    {
      "address": "0xfD5d53346B9B66352f1f18BBDD34667dad48409B",
      "txHash": "0x72b472128ae126aba9ace9e3185c79d889332817815cdb1e4f20ac40b28f23cf",
      "kind": "transparent"
    },
    {
      "address": "0x9230323Dd953322D476590907a1a30D423F38B7c",
      "txHash": "0xe1effb16b04c7a30bc019174af91e59692d1bd6cc93fae632843c55213c3ab1b",
      "kind": "transparent"
    },
    {
      "address": "0x768B4E53027D266cA391F117Dc81Dd69acdFB638",
      "txHash": "0x9e6b676ca08890a7ac00d2ea46ef6de77ccc420273fd51c7ed90ad8073b0ebea",
      "kind": "transparent"
    },
    {
      "address": "0x5bb44dDaAc51010a651ABDc4B64BE30418A6fB3F",
      "txHash": "0x9245e03249ef7a91359b016b7cb217e7ea9e47cd757b34c6f106e99722441823",
      "kind": "transparent"
    },
    {
      "address": "0x2bc83d944a6e063Bb032fb2e5a8a97C74139FE29",
      "txHash": "0xd572aa4b275c8e4821c4497dd57d045e1bc94ad071bfce777b75693dc5e56a0e",
      "kind": "transparent"
    },
    {
      "address": "0x13c8843a3d2DEe70CAC440EEc0e7D5F587fC3e92",
      "txHash": "0xac8ad9201a7168ec5a0a5d8a26868ddda19d0b617be6e48bd26d01382d351587",
      "kind": "transparent"
    },
    {
      "address": "0x4F803291a81f0Fa78892d38457399DCbf47786d1",
      "txHash": "0x8cc85553d52bda4b5dea1c684b74486c96a7f908cd316d4f7371e481582d1ba5",
      "kind": "transparent"
    },
    {
      "address": "0xa8483A910d2d4bD35fB4DF323c8601b023Ac81c6",
      "txHash": "0x983bd2b8f39fd77ea08d73d711845672b99d5fcc0853630d015d88543a15a68d",
      "kind": "transparent"
    },
    {
      "address": "0x3610C6e06cc3C556Be0F20F2bBE32e6Ad8e0693D",
      "txHash": "0x461f2357c3e1a0f14f17d56c80112d0bf81abc4c3a5f34b40f87b3e791328ece",
      "kind": "transparent"
    },
    {
      "address": "0x20Fe8a86Edcb1E387FFD8d8b873236728da3D147",
      "txHash": "0x3b8f87d4c90d50c50c92ddc8097daca39605882a4f8dedbbc2954a987b3a2c9d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "13df3f38f6408b2f0d69dc519fb6fe5a66b9def032b48d84c466ee94f2e2b904": {
      "address": "0x13D86BeA8e45a7De4aC1d7ba3b806Fc79196EF5A",
      "txHash": "0xff0caf92e2492e3a3c56af534524a330825377f896032e30d4b7ee397e9c12f2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IApeCoinStaking)16857",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:17"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:18"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IStakeManager)17655",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:19"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16857": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)17655": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d713433af3ef9e8f14614a8ccf775b3ebd028e2dc75e73f3acd5a8b967d6437": {
      "address": "0xDcE8867c1419945EfE64ac266A8dC067127B7Ad6",
      "txHash": "0x8a5398e669fd552fae2c192467d4ddb583923a0c0ce38d28d65cb47acef82757",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IApeCoinStaking)13950",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:24"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)619",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(PoolState)14265_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IStakeManager)14766",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICoinPool)13985",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "delegation",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(IDelegationRegistry)14208",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)13950": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)13985": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)14208": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)619": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)14766": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)14846": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)14265_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)14265_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)14846",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9f598b113b91e0a3827d9aecce8fbb6924d5629123a88d65a7d1454b3bff6bb3": {
      "address": "0x4B2439Ddb432562fF1752E3Af3839f03944D0e34",
      "txHash": "0x893739873c1cf2d81b15a66a271656ba7989a4bac810ad4466ace16ebb0b4fce",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "rewardsStrategies",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_contract(IRewardsStrategy)9969)",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:27"
          },
          {
            "label": "_stakedTokenIds",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(UintSet)4081_storage)",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:28"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:29"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:30"
          },
          {
            "label": "pendingFeeAmount",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:31"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(IApeCoinStaking)9372",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:33"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "107",
            "type": "t_contract(IERC20Upgradeable)1231",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:34"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "108",
            "type": "t_contract(INftVault)9959",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:35"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "109",
            "type": "t_contract(ICoinPool)9407",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:36"
          },
          {
            "label": "nftPool",
            "offset": 0,
            "slot": "110",
            "type": "t_contract(INftPool)9755",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:37"
          },
          {
            "label": "apeCoinPoolStakedAmount",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:38"
          },
          {
            "label": "botAdmin",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)9372": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)9407": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1231": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)9755": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)9959": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)9969": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)9969)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(UintSet)4081_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Set)3609_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)4081_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3609_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87e848a1bedb729f3d5d90835985c3453a98844c882232590727dfc56d987d18": {
      "address": "0xAF81667D1C56D218610b98267316B8F0bbb1Dd18",
      "txHash": "0xf3283115c88dd0fc788aa3300b4ed8e3de24e7615fd7a37c488791ced8a59913",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "aaveAddressesProvider",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IAaveLendPoolAddressesProvider)11962",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:20"
          },
          {
            "label": "aaveLendPool",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IAaveLendPool)11953",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:21"
          },
          {
            "label": "bendAddressesProvider",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(ILendPoolAddressesProvider)12056",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:22"
          },
          {
            "label": "bendLendPool",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(ILendPool)12042",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:23"
          },
          {
            "label": "bendLendLoan",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ILendPoolLoan)12075",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:24"
          },
          {
            "label": "nftPool",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(INftPool)10348",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:26"
          },
          {
            "label": "stBayc",
            "offset": 0,
            "slot": "157",
            "type": "t_contract(IStakedNft)10765",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:27"
          },
          {
            "label": "stMayc",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IStakedNft)10765",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:28"
          },
          {
            "label": "stBakc",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(IStakedNft)10765",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "160",
            "type": "t_contract(IERC721Upgradeable)1077",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:31"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "161",
            "type": "t_contract(IERC721Upgradeable)1077",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:32"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "162",
            "type": "t_contract(IERC721Upgradeable)1077",
            "contract": "LendingMigrator",
            "src": "contracts/misc/LendingMigrator.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IAaveLendPool)11953": {
            "label": "contract IAaveLendPool",
            "numberOfBytes": "20"
          },
          "t_contract(IAaveLendPoolAddressesProvider)11962": {
            "label": "contract IAaveLendPoolAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(IERC721Upgradeable)1077": {
            "label": "contract IERC721Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ILendPool)12042": {
            "label": "contract ILendPool",
            "numberOfBytes": "20"
          },
          "t_contract(ILendPoolAddressesProvider)12056": {
            "label": "contract ILendPoolAddressesProvider",
            "numberOfBytes": "20"
          },
          "t_contract(ILendPoolLoan)12075": {
            "label": "contract ILendPoolLoan",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)10348": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)10765": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7dc23d9dad8f02cfc22e8c368dfc7f17c89bb89dce68380df81ceeb5c4fce856": {
      "address": "0x38B4842741e020181Bbc9916B207eaeaf9478667",
      "txHash": "0x55b1cbae660e58aae236978696eaa757ac2246e401731ec7505246fa402a2afd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(VaultStorage)16957_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)16480": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)16764": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)16967_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)16962_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)16908_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)16967_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)16962_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5838_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)16908_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)16908_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)16967_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)16962_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5366_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5838_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5366_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)16957_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "_nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)16908_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)16962_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)16967_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16480",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)16764",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)40_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2d407f4e99a04f30f1b2d5e2bc9c966b49b61c4b1092f14b16af844927696ecc": {
      "address": "0x8365860E4fE84254dCD747d2498d6b104Ac1b60A",
      "txHash": "0x8a078bf36d320c531570b55ced77a322b63a45fc42a4eb6a4b88a41840a52874",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17194",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17194": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "678dc3f49f32805143950de5eb3617729898e4001da907f85b0560b8276830ca": {
      "address": "0xb409587EcCF6d966304031F26E6E8B0d3281E59d",
      "txHash": "0xa48312bec828ea8cd22fa13d96a45608d73ba1cd78087f10f6ea23e1731ce148",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17194",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17194": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8fa35156ef7eecbad4bdd5a19944cea5ac4919d47d179bfbe7d285ffff79ee0f": {
      "address": "0xAF1DcEcF0b0A8D85a714Fad6332f7001f38461A1",
      "txHash": "0x8d3e322a3c35477aced2410d85455e42154742399b1d4203b11bbecfe912a327",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17194",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17194": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c9bbc5283d7bf2e69a4d2199c8ff023a52d844a36651b2b7ca34e0984a4da32d": {
      "address": "0xF2e76249f2eBA8FC4e2d090f225e2b137d4Abc74",
      "txHash": "0x9199b5d365979a5f3934b3a8a38ff07c8f7a32ebbb2ac86d538b39ec57a4223c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)1905",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)4792",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)1905": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)4792": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6040f9be452f169aa327f0d2b7bb60919ea36cb702fe3bae7668dd95ae0d8e69": {
      "address": "0xDD0d2980cCd99b8BA4bC876b64fCE572B553E3BF",
      "txHash": "0x889387cd8a5973ba9926729a4f825ef3185c6cc0f2313190df2e3c6224166d5e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)1905",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)4792",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)1905": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)4792": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5105050f41e1affa3b40ce83494425cced05d818c7b9b433d69eb77e3d0fbb2": {
      "address": "0xF8af6b7160D4bcB48a9f4c31A7953c47951848D0",
      "txHash": "0x03ae9594b4cc68311165217927942c485bc702aeb584b6c4691d731b21c60a41",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)1905",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)4792",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)1905": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)4792": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "38d365cdace027cdc6ded0f099fd86612ebc15cd7fa69fff8bb0e7e69e6e10b5": {
      "address": "0x6c3459111a3a7778322B4f624F58c4cdaB9034Ee",
      "txHash": "0xfcf9f1e51ed41d706957122646f4fec0c66a4ecc37f4243da9f77ee7e941158c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "101",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IApeCoinStaking)16721",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:18"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:19"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IStakeManager)17700",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:20"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16721": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)17700": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "917962d127ecc6fbb8225450cd8b7ffb7f94e0dcf0ec23b1f4a677cff49de390": {
      "address": "0x0A1eF3819209c40E01aedC274Eedaf4A5299206A",
      "txHash": "0xe8331c14c35078256500fed61fd5bbe642f707044fbd32c4bbbd1097e8d66d1b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IApeCoinStaking)16480",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(PoolState)16823_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IStakeManager)17476",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICoinPool)16541",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(IBNFTRegistry)16492",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16480": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)16492": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)16541": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)17476": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)17562": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)16823_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)16823_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)17562",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "707d68d378bda4bc924845fec8fa0396dbc4659632d6c0b2680d3e4b8dbba391": {
      "address": "0xEee0ee9B6d73Af89a79d518cE7d563414F4c7BBB",
      "txHash": "0x8eb239dd6b730f2d42c895a4204419730ef861e76d9338104942197aeae03ec8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(StakerStorage)13236_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)32_storage": {
            "label": "uint256[32]",
            "numberOfBytes": "1024"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16480": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)16541": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)16889": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17194": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)17209": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)17562": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)17572": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)17209)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)13236_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)17209)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)17572",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16480",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)17194",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)16541",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)16889",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)17562",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)17562",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)17562",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)32_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "683e15e1746535a52d561e4dcc65e4cdf375674d01790e5e3cf9afcb68d97bb8": {
      "address": "0x29Fa4609BD0B24477E5b2946438f1E2fEe6494bF",
      "txHash": "0xc6256b12979e0bfc92ec57c796e46d463a5421fb7fe38b3bf2d69cc28d5ad783",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(StakerStorage)2344_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)32_storage": {
            "label": "uint256[32]",
            "numberOfBytes": "1024"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)5605": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)5654": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)555": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)6002": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)6307": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)6322": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)6675": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)6685": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)6322)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)2344_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)6322)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)6685",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)5605",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)555",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)6307",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)5654",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)6002",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)6675",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)6675",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)6675",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)32_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2331c81226ee6010302821101e368090d5b6363fab8dbf96a8f833dc06b7b28d": {
      "address": "0x74D58b2eb4CAc47Cf3d9C4dd758C888B7E94035b",
      "txHash": "0xfcec3a76912c020eced95d66defd470bef3213e04fd7fdb0b8dc9ffbde586697",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(StakerStorage)13436_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)32_storage": {
            "label": "uint256[32]",
            "numberOfBytes": "1024"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16721": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)16782": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)17138": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17433": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)17441": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)17770": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)17780": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)17441)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)13436_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)17441)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)17780",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16721",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)17433",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)16782",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)17138",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)17770",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)17770",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)17770",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)32_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d58487392b6f96f67fa78584583e08b2a80e606f30319b3d735b7fa9d4766fe3": {
      "address": "0x1e3B54D1cc423A7d475102D62490d9428D8387B8",
      "txHash": "0xc26fac3dc6f38e8edc38764aa3dad5ec26de73921b05a5d8042cde4d5b7b3c61",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IApeCoinStaking)16721",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_struct(PoolState)17064_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IStakeManager)17700",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICoinPool)16782",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:31"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:32"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(IBNFTRegistry)16733",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16721": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)16733": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)16782": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)17700": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)17770": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)17064_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)17064_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)17770",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1c56bdfe57e1086f53656594f2cc3d2d59c9acd7172d189fe841193278717e5": {
      "address": "0x3deadC75Bd9D0f8D57d3E59464b4686E56a1eeE3",
      "txHash": "0xeccb12fb57d931798ec465fbd25ff974400bdde080b95844b52ef29c0bf63a1b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17433",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17433": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "988c44c00fa79a3ee4adb7bfcc6ddf8193342bf4892d249789b3d60a1c27fe45": {
      "address": "0x31379Bb1976a79a90d98b46352f2F0b6D27DF078",
      "txHash": "0xbeefb6112b21f28ad6aee06fa95faf16bc5d7e4fce8ddd1a6cac6e7330e4b126",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17433",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17433": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "288b424cb48e147be2d10f979b3f84b7bbf2647e5c9147304f7bd27102d334ea": {
      "address": "0xeA02Bf2c8CD89A5C77DB9b64F43855d65D173851",
      "txHash": "0x1132a5944c1b83676c7e7a90e0aadb6f14501560441767fecb282ab08ac6eb56",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17433",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17433": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b3a7d8471ee5755d033157179c167b8a34d05784433801ae52cacd858458c2f6": {
      "address": "0x372701b15a159DA619aA317771AB6c3cb8300276",
      "txHash": "0x86fb13248b01326089c7b9e521103e742478819e2f197532cca3972c8833c3d8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(VaultStorage)17206_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)16721": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)17005": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)17216_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)17211_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)17157_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)17216_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)17211_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5838_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)17157_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)17157_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)17216_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)17211_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5366_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5838_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5366_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)17206_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "_nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)17157_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)17211_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)17216_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16721",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)17005",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)40_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a2f84725bb666d81693b7dd5a84f0d9ae803ce3e0d321a1a0bdc5493c83a9b06": {
      "address": "0x66c88d5AeE3C00637A0955553c3cD82D8fA7eFB2",
      "txHash": "0xde765f040bdbabc1df057a90c183481d80f08e83435c8ee51e11bacc4782c047",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(VaultStorage)11508_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)10932": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)11216": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1240": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)11518_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)11513_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5711_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)11459_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)11518_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)11513_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5711_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)11459_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)11459_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)11518_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)11513_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5239_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5711_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5239_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)11508_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "_nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)11459_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)11513_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)11518_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5711_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)10932",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1240",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)11216",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "__gap",
                "type": "t_array(t_uint256)40_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "888e752c328db8cf0404bd31a0341a1fabe7e47f63f7729eb134f811378443e3": {
      "address": "0x547725043d70FB7Ff30803DD4EcD6989c2557Fe2",
      "txHash": "0xa722a1ffb96f35e8ec4243ba5ef4124bb3f6e7f8b53c5950f4f3ac900c9f0834",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17541",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17541": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a6d125e30f76032fdca0ba9b204098f9fe72e813a81814cb725c2c3dc02ba0d": {
      "address": "0x4238e45c91042505E8E01273496B678cD0EBc064",
      "txHash": "0x33536c96d06df25ff260efcdd46b24e3c7df6134327d210a72b78b6310eab7de",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17541",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17541": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bb2c4b465b82dacbabc3239f1e1b49eef1e8b12c46283d9ec3c370f1a2bf1359": {
      "address": "0x7511A8a6dBafD306A38053eEa03696879f68ed40",
      "txHash": "0x24893ff7c9eafa6aafc33b18d76798a64041b149722edd3cc538be158dc42d29",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:15"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(INftVault)17541",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:19"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:22"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:25"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "256",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17541": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bb392f4beaec3aa9857adadf5b5625f34ea6c5153ae9642af22278272e89b5ba": {
      "address": "0xb1a5aa0f702EF33Ec51098a936705f83F3016C76",
      "txHash": "0xe5f90316c0246e379a5dc352a7e5d5c7c3b1dbfcedf4e8616e1fa9ba95748f13",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)17364_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)16793": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)17077": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)17374_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)17369_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)17320_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)17374_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)17369_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5838_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)17320_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)17320_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)17374_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)17369_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5366_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5838_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5366_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)17364_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "_nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)17320_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)17369_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)17374_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16793",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)17077",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "88687b4c9e41bf70538646d5ec424154da8d313f48705120b8ee0d90eb1157e1": {
      "address": "0xaD0493301c7b584A1E5fBCD3e888C1424370c2b1",
      "txHash": "0xdecc84af351fa07547f856de4bcc91ad98db473b5097477c67ba271b97c80ffb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(VaultStorage)17364_storage",
            "contract": "NftVault",
            "src": "contracts/stakednft/NftVault.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IApeCoinStaking)16793": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IDelegationRegistry)17077": {
            "label": "contract IDelegationRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Position)17374_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Position))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)17369_storage))": {
            "label": "mapping(address => mapping(address => struct INftVault.Refund))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))": {
            "label": "mapping(address => mapping(address => struct EnumerableSetUpgradeable.UintSet))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)17320_storage))": {
            "label": "mapping(address => mapping(uint256 => struct INftVault.NftStatus))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Position)17374_storage)": {
            "label": "mapping(address => struct INftVault.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Refund)17369_storage)": {
            "label": "mapping(address => struct INftVault.Refund)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)5838_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NftStatus)17320_storage)": {
            "label": "mapping(uint256 => struct INftVault.NftStatus)",
            "numberOfBytes": "32"
          },
          "t_struct(NftStatus)17320_storage": {
            "label": "struct INftVault.NftStatus",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "staker",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Position)17374_storage": {
            "label": "struct INftVault.Position",
            "members": [
              {
                "label": "stakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardsDebt",
                "type": "t_int256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Refund)17369_storage": {
            "label": "struct INftVault.Refund",
            "members": [
              {
                "label": "principal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)5366_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)5838_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5366_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultStorage)17364_storage": {
            "label": "struct INftVault.VaultStorage",
            "members": [
              {
                "label": "_nfts",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NftStatus)17320_storage))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_refunds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Refund)17369_storage))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Position)17374_storage))",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_stakingTokenIds",
                "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5838_storage))",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16793",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "delegationRegistry",
                "type": "t_contract(IDelegationRegistry)17077",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad322fbabeb82515ab79530d97320af8bf1f3709522f8cbf2956145b4cc50d89": {
      "address": "0x8e311C4657B2B7491d7f688cc834DC39b1e5234d",
      "txHash": "0x61bcab5fc6972fac89ddce7c377a635f91a35238211e8f26bb4f44864fc9ae0e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)17591",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:20"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:26"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17591": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "185c14ea964fe76c9a1108af95b8659c06afbcdf6b286ab6fc152b59ecaeb0d1": {
      "address": "0xbA707500Dd94940e049d0631b724fb125282bF0A",
      "txHash": "0xdf405a77df4c002b07593688c78d7453eaa50bf231a20ceebd86a9350676f8b2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)17591",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:20"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:26"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17591": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "887c04babde18594f672a4c48c7f04886e944602f66b646924d8f1288a8f23ec": {
      "address": "0xD2E252CdB70eDb72E847ee9B6BB249Ead1BFd380",
      "txHash": "0xc05fb398ff83585b9aa1f842c00dcde2db0ec98d81a3800dff2c65c32196412b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_nft",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC721MetadataUpgradeable)3933",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:16"
          },
          {
            "label": "nftVault",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(INftVault)17591",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:17"
          },
          {
            "label": "_stakedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:20"
          },
          {
            "label": "_stakedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:23"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:26"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "306",
            "type": "t_string_storage",
            "contract": "StNft",
            "src": "contracts/stakednft/StNft.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC721MetadataUpgradeable)3933": {
            "label": "contract IERC721MetadataUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17591": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e20f0503b27b674f369f21f771218d7b88c8fc999db43d2dfb14cac51f56037": {
      "address": "0x7aE8EE38Fd6968dfb302B034cbbB4276ab38e26e",
      "txHash": "0xded00b4ddce48359f0bfda85ec15753a12735d06ff11f8e9eafa95da9daa1a4e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:34"
          },
          {
            "label": "_decimals",
            "offset": 20,
            "slot": "251",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:295"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IApeCoinStaking)16793",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:25"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:26"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(IStakeManager)17858",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:27"
          },
          {
            "label": "pendingApeCoin",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "BendCoinPool",
            "src": "contracts/BendCoinPool.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16793": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)17858": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "93dede4d0a7df6c30ebb3254eeee4f0debee9ebf12bd835c686dd5c945858ca9": {
      "address": "0x5794bfcBb9c72691420419102E6406163FC5c67c",
      "txHash": "0xd6a517632e91d3380a5b624b787b55a33ab98187487e49cf52fa6b177f1591ba",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)16793",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:22"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)1367",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:23"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)17136_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:24"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)17858",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)16854",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)16805",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16793": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)16805": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)16854": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)17858": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)17942": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)17136_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)17136_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)17942",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1d1fe908f180805a59f95489e74b8f7f813cf2a2a6be542a168e453b730d8a0": {
      "address": "0xB3234b2401c601815d33a59E412d944A85Fb3957",
      "txHash": "0x9f3c1ef37464e82d97d062ed5d9508bb860013d4fdc3fcbef11cb6483ddd11c3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)13483_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)16793": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)16854": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1367": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)17210": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)17591": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)17599": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)17942": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)17952": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)17599)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)13483_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)17599)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)17952",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)16793",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)1367",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)17591",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)16854",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)17210",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)17942",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)17942",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)17942",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5c5b36a177654f89694346d5148e7c92434e5e37cbb2183d9f3ddba1b7ad18e": {
      "address": "0xbae15c3020211fAc8Db7205929Ef879C6F70c400",
      "txHash": "0xf5105f171b87953ccd5e59da058679ef3bca5e7fb1b018137eb3fb04c119144d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "apeCoinStaking",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IApeCoinStaking)8052",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:22"
          },
          {
            "label": "apeCoin",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IERC20Upgradeable)755",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:23"
          },
          {
            "label": "poolStates",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(PoolState)8393_storage)",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:24"
          },
          {
            "label": "staker",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IStakeManager)9133",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:25"
          },
          {
            "label": "coinPool",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ICoinPool)8113",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:26"
          },
          {
            "label": "bayc",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:27"
          },
          {
            "label": "mayc",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:28"
          },
          {
            "label": "bakc",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:29"
          },
          {
            "label": "bnftRegistry",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IBNFTRegistry)8064",
            "contract": "BendNftPool",
            "src": "contracts/BendNftPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)8052": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(IBNFTRegistry)8064": {
            "label": "contract IBNFTRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)8113": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)755": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)9133": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)9217": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(PoolState)8393_storage)": {
            "label": "mapping(address => struct INftPool.PoolState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolState)8393_storage": {
            "label": "struct INftPool.PoolState",
            "members": [
              {
                "label": "stakedNft",
                "type": "t_contract(IStakedNft)9217",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accumulatedRewardsPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardsDebt",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pendingApeCoin",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dbd759caf241125ffabf2ae2f6c1dd2f9ec40fdad42496af78b7428b82658263": {
      "address": "0x11c1a062a3016B3E3DD46E58Ad938739Fd539492",
      "txHash": "0x70142a94e5f858d00518e7021c3ab32c33e950536d2c192f52df065307f157f7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_stakerStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(StakerStorage)4699_storage",
            "contract": "BendStakeManager",
            "src": "contracts/BendStakeManager.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IApeCoinStaking)8052": {
            "label": "contract IApeCoinStaking",
            "numberOfBytes": "20"
          },
          "t_contract(ICoinPool)8113": {
            "label": "contract ICoinPool",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)755": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(INftPool)8485": {
            "label": "contract INftPool",
            "numberOfBytes": "20"
          },
          "t_contract(INftVault)8866": {
            "label": "contract INftVault",
            "numberOfBytes": "20"
          },
          "t_contract(IRewardsStrategy)8874": {
            "label": "contract IRewardsStrategy",
            "numberOfBytes": "20"
          },
          "t_contract(IStakedNft)9217": {
            "label": "contract IStakedNft",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawStrategy)9227": {
            "label": "contract IWithdrawStrategy",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_contract(IRewardsStrategy)8874)": {
            "label": "mapping(address => contract IRewardsStrategy)",
            "numberOfBytes": "32"
          },
          "t_struct(StakerStorage)4699_storage": {
            "label": "struct BendStakeManager.StakerStorage",
            "members": [
              {
                "label": "rewardsStrategies",
                "type": "t_mapping(t_address,t_contract(IRewardsStrategy)8874)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawStrategy",
                "type": "t_contract(IWithdrawStrategy)9227",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRecipient",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "pendingFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "apeCoinPoolStakedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "apeCoinStaking",
                "type": "t_contract(IApeCoinStaking)8052",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "apeCoin",
                "type": "t_contract(IERC20Upgradeable)755",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "nftVault",
                "type": "t_contract(INftVault)8866",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "coinPool",
                "type": "t_contract(ICoinPool)8113",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "nftPool",
                "type": "t_contract(INftPool)8485",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "stBayc",
                "type": "t_contract(IStakedNft)9217",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "stMayc",
                "type": "t_contract(IStakedNft)9217",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "stBakc",
                "type": "t_contract(IStakedNft)9217",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "bayc",
                "type": "t_address",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "mayc",
                "type": "t_address",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "bakc",
                "type": "t_address",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "botAdmin",
                "type": "t_address",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
